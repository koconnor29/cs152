Expression:
  let y = true in
  let f = (lambda x. (lambda y. x)) in let g = (lambda z. y) in (f g)

Typechecking the expression...
Initial Type:
  'd

Constraints:
  ('a -> ('b -> 'a)) = (('c -> bool) -> 'd)

Result:
  ('b -> ('c -> bool))

Evaluating the expression...
Result:
  <closure>
